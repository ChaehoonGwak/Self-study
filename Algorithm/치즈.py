2636

문제
아래 <그림 1>과 같이 정사각형 칸들로 이루어진 사각형 모양의 판이 있고, 그 위에 얇은 치즈(회색으로 표시된 부분)가 놓여 있다. 
판의 가장자리(<그림 1>에서 네모 칸에 X친 부분)에는 치즈가 놓여 있지 않으며 치즈에는 하나 이상의 구멍이 있을 수 있다.

이 치즈를 공기 중에 놓으면 녹게 되는데 공기와 접촉된 칸은 한 시간이 지나면 녹아 없어진다. 
치즈의 구멍 속에는 공기가 없지만 구멍을 둘러싼 치즈가 녹아서 구멍이 열리면 구멍 속으로 공기가 들어가게 된다. 
<그림 1>의 경우, 치즈의 구멍을 둘러싼 치즈는 녹지 않고 ‘c’로 표시된 부분만 한 시간 후에 녹아 없어져서 <그림 2>와 같이 된다.



<그림 1> 원래 치즈 모양

다시 한 시간 후에는 <그림 2>에서 ‘c’로 표시된 부분이 녹아 없어져서 <그림 3>과 같이 된다.



<그림 2> 한 시간 후의 치즈 모양



<그림 3> 두 시간 후의 치즈 모양

<그림 3>은 원래 치즈의 두 시간 후 모양을 나타내고 있으며, 남은 조각들은 한 시간이 더 지나면 모두 녹아 없어진다. 
그러므로 처음 치즈가 모두 녹아 없어지는 데는 세 시간이 걸린다. <그림 3>과 같이 치즈가 녹는 과정에서 여러 조각으로 나누어 질 수도 있다.

입력으로 사각형 모양의 판의 크기와 한 조각의 치즈가 판 위에 주어졌을 때, 
공기 중에서 치즈가 모두 녹아 없어지는 데 걸리는 시간과 모두 녹기 한 시간 전에 남아있는 치즈조각이 놓여 있는 칸의 개수를 구하는 프로그램을 작성하시오.

입력
첫째 줄에는 사각형 모양 판의 세로와 가로의 길이가 양의 정수로 주어진다. 세로와 가로의 길이는 최대 100이다. 판의 각 가로줄의 모양이 윗 줄부터 차례로 둘째 줄부터 마지막 줄까지 주어진다. 
치즈가 없는 칸은 0, 치즈가 있는 칸은 1로 주어지며 각 숫자 사이에는 빈칸이 하나씩 있다.

출력
첫째 줄에는 치즈가 모두 녹아서 없어지는 데 걸리는 시간을 출력하고, 둘째 줄에는 모두 녹기 한 시간 전에 남아있는 치즈조각이 놓여 있는 칸의 개수를 출력한다.



from collections import deque

dx = [0,0,-1,1]
dy = [-1,1,0,0]
 
def bfs():
    visited = [[False]*w for _ in range(h)]
    q = deque()
    q.append([0,0])
    visited[0][0] = True
    cnt = 0
    
    while q:
        y, x = q.popleft()
        
        for i in range(4):
            nx = x + dx[i]
            ny = y + dy[i]
            
            if 0 <= nx < w and 0 <= ny < h: # 그래프 내에서
                if not visited[ny][nx]: # 해당 좌표를 방문하지 않았을 시에
                    if graph[ny][nx] == 0: # 공기를 만나면 방문처리 후 큐에 삽입
                        visited[ny][nx] = True
                        q.append([ny,nx])
                    elif graph[ny][nx] == 1: # 치즈를 만나면 0으로 바꿔주고 치즈 갯수를 증가시킨 뒤 방문 처리, 큐에 삽입하지 않으므로 치즈안의 구멍의 공기와 닿은 부분은 녹지 않음
                        graph[ny][nx] = 0
                        cnt += 1
                        visited[ny][nx] = True
            
    cheese.append(cnt) # 녹은 치즈 갯수를 리스트에 삽입
    return cnt

h, w = map(int, input().split())
graph = [list(map(int, input().split())) for _ in range(h)]
time = 0
cheese = [] # 모두 녹기 한 시간 전에 남아있는 치즈조각을 구하기 위한 리스트

while bfs(): # 치즈가 모두 없어질때까지 반복
    time += 1 # bfs를 한번 돌때마다 시간을 증가시킴

print(time) # 치즈가 모두 녹아서 없어지는 데 걸리는 시간 출력
print(cheese[-2]) # 모두 녹기 한 시간 전에 남아있는 치즈조각 출력
